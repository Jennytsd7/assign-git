1. What is a gitignore file and what should it include for a Java project? 

The gitignore file contains all the local file extensions, (i.e IDE generated files, temp files, compiler generated files, output files, debug files) which need not reflect when we push the code to the source control repository. This information is not useful for other project collaborators and is specific to the current user.

For a Java project, the gitignore file contains the following - 

# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*


2. What does fast-forward in Git mean? 

Git fast-forward means to merge a branch that is ahead of your checked out branch.  [ Citation : https://confluence.atlassian.com/bitbucket/git-fast-forwards-and-branch-management-329977726.html] 

For example, When we merge feature_branch into the master-branch, and if the feature-branch commits are directly ahead of the master-branch, git moves the HEAD of the master to the feature branch head, and there will not be any merge commit in this case.

3. Why should you have different branches? 

a) When multiple people are working on a project, it is always a good practice to create different branches in order to minimize conflicts which may occur while commiting code, i.e. to minimize merge conflicts 

b) Different feature developments can be done independently using branches  

4. In a project how many remote Git repositories do you usually have?

Usually, there is only one repository for a project. Some projects might have two or more repositories based on the project requirement. 

For example, in a Web Project, we can have 2 repositories one for Front End and one for Back End respectively.


